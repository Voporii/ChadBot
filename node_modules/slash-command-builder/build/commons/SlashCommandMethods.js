"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const SlashCommandBooleanOption_1 = __importDefault(require("../options/SlashCommandBooleanOption"));
const SlashCommandChannelOption_1 = __importDefault(require("../options/SlashCommandChannelOption"));
const SlashCommandIntegerOption_1 = __importDefault(require("../options/SlashCommandIntegerOption"));
const SlashCommandMentionableOption_1 = __importDefault(require("../options/SlashCommandMentionableOption"));
const SlashCommandNumberOption_1 = __importDefault(require("../options/SlashCommandNumberOption"));
const SlashCommandRoleOption_1 = __importDefault(require("../options/SlashCommandRoleOption"));
const SlashCommandStringOption_1 = __importDefault(require("../options/SlashCommandStringOption"));
const SlashCommandUserOption_1 = __importDefault(require("../options/SlashCommandUserOption"));
class SlashCommandMethods {
    constructor() {
        this.options = [];
    }
    addBooleanOption(callback) {
        this.addNewOption(callback, SlashCommandBooleanOption_1.default);
        return this;
    }
    addChannelOption(callback) {
        this.addNewOption(callback, SlashCommandChannelOption_1.default);
        return this;
    }
    addIntegerOption(callback) {
        this.addNewOption(callback, SlashCommandIntegerOption_1.default);
        return this;
    }
    addMentionableOption(callback) {
        this.addNewOption(callback, SlashCommandMentionableOption_1.default);
        return this;
    }
    addNumberOption(callback) {
        this.addNewOption(callback, SlashCommandNumberOption_1.default);
        return this;
    }
    addRoleOption(callback) {
        this.addNewOption(callback, SlashCommandRoleOption_1.default);
        return this;
    }
    addStringOption(callback) {
        this.addNewOption(callback, SlashCommandStringOption_1.default);
        return this;
    }
    addUserOption(callback) {
        this.addNewOption(callback, SlashCommandUserOption_1.default);
        return this;
    }
    addNewOption(callback, Instance) {
        if (!(0, lodash_1.isFunction)(callback)) {
            throw new Error('The `callback` parameter is not a function');
        }
        this.options.push(callback(new Instance()).toJSON());
        return this;
    }
}
exports.default = SlashCommandMethods;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xhc2hDb21tYW5kTWV0aG9kcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb25zL1NsYXNoQ29tbWFuZE1ldGhvZHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxtQ0FBb0M7QUFNcEMscUdBQTZFO0FBQzdFLHFHQUE2RTtBQUM3RSxxR0FBNkU7QUFDN0UsNkdBQXFGO0FBQ3JGLG1HQUEyRTtBQUMzRSwrRkFBdUU7QUFDdkUsbUdBQTJFO0FBQzNFLCtGQUF1RTtBQVd2RSxNQUFxQixtQkFBbUI7SUFBeEM7UUFDa0IsWUFBTyxHQUE2QyxFQUFFLENBQUM7SUE4RXpFLENBQUM7SUE1RVEsZ0JBQWdCLENBQ3JCLFFBQTJFO1FBRTNFLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLG1DQUF5QixDQUFDLENBQUM7UUFFdkQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sZ0JBQWdCLENBQ3JCLFFBQTJFO1FBRTNFLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLG1DQUF5QixDQUFDLENBQUM7UUFFdkQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sZ0JBQWdCLENBQ3JCLFFBQTJFO1FBRTNFLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLG1DQUF5QixDQUFDLENBQUM7UUFFdkQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sb0JBQW9CLENBQ3pCLFFBQW1GO1FBRW5GLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLHVDQUE2QixDQUFDLENBQUM7UUFFM0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sZUFBZSxDQUNwQixRQUF5RTtRQUV6RSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxrQ0FBd0IsQ0FBQyxDQUFDO1FBRXRELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLGFBQWEsQ0FDbEIsUUFBcUU7UUFFckUsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsZ0NBQXNCLENBQUMsQ0FBQztRQUVwRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxlQUFlLENBQ3BCLFFBQXlFO1FBRXpFLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLGtDQUF3QixDQUFDLENBQUM7UUFFdEQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sYUFBYSxDQUNsQixRQUFxRTtRQUVyRSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxnQ0FBc0IsQ0FBQyxDQUFDO1FBRXBELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVPLFlBQVksQ0FDbEIsUUFBMkIsRUFDM0IsUUFBcUI7UUFFckIsSUFBSSxDQUFDLElBQUEsbUJBQVUsRUFBQyxRQUFRLENBQUMsRUFBRTtZQUN6QixNQUFNLElBQUksS0FBSyxDQUFDLDRDQUE0QyxDQUFDLENBQUM7U0FDL0Q7UUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxRQUFRLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7UUFFckQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0Y7QUEvRUQsc0NBK0VDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNGdW5jdGlvbiB9IGZyb20gJ2xvZGFzaCc7XHJcblxyXG5pbXBvcnQgeyBBcHBsaWNhdGlvbkNvbW1hbmRPcHRpb25TdHJ1Y3R1cmUgfSBmcm9tICcuLi9pbnRlcmZhY2VzJztcclxuXHJcbmltcG9ydCBTbGFzaENvbW1hbmRPcHRpb24gZnJvbSAnLi9TbGFzaENvbW1hbmRPcHRpb24nO1xyXG5cclxuaW1wb3J0IFNsYXNoQ29tbWFuZEJvb2xlYW5PcHRpb24gZnJvbSAnLi4vb3B0aW9ucy9TbGFzaENvbW1hbmRCb29sZWFuT3B0aW9uJztcclxuaW1wb3J0IFNsYXNoQ29tbWFuZENoYW5uZWxPcHRpb24gZnJvbSAnLi4vb3B0aW9ucy9TbGFzaENvbW1hbmRDaGFubmVsT3B0aW9uJztcclxuaW1wb3J0IFNsYXNoQ29tbWFuZEludGVnZXJPcHRpb24gZnJvbSAnLi4vb3B0aW9ucy9TbGFzaENvbW1hbmRJbnRlZ2VyT3B0aW9uJztcclxuaW1wb3J0IFNsYXNoQ29tbWFuZE1lbnRpb25hYmxlT3B0aW9uIGZyb20gJy4uL29wdGlvbnMvU2xhc2hDb21tYW5kTWVudGlvbmFibGVPcHRpb24nO1xyXG5pbXBvcnQgU2xhc2hDb21tYW5kTnVtYmVyT3B0aW9uIGZyb20gJy4uL29wdGlvbnMvU2xhc2hDb21tYW5kTnVtYmVyT3B0aW9uJztcclxuaW1wb3J0IFNsYXNoQ29tbWFuZFJvbGVPcHRpb24gZnJvbSAnLi4vb3B0aW9ucy9TbGFzaENvbW1hbmRSb2xlT3B0aW9uJztcclxuaW1wb3J0IFNsYXNoQ29tbWFuZFN0cmluZ09wdGlvbiBmcm9tICcuLi9vcHRpb25zL1NsYXNoQ29tbWFuZFN0cmluZ09wdGlvbic7XHJcbmltcG9ydCBTbGFzaENvbW1hbmRVc2VyT3B0aW9uIGZyb20gJy4uL29wdGlvbnMvU2xhc2hDb21tYW5kVXNlck9wdGlvbic7XHJcblxyXG4vKlxyXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxufCBTbGFzaENvbW1hbmRCdWlsZGVyOjpDb21tb25zIC0+IFNsYXNoQ29tbWFuZE1ldGhvZHNcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnxcclxufCAuLi5cclxufFxyXG4qL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2xhc2hDb21tYW5kTWV0aG9kcyB7XHJcbiAgcHVibGljIHJlYWRvbmx5IG9wdGlvbnM6IEFycmF5PEFwcGxpY2F0aW9uQ29tbWFuZE9wdGlvblN0cnVjdHVyZT4gPSBbXTtcclxuXHJcbiAgcHVibGljIGFkZEJvb2xlYW5PcHRpb24oXHJcbiAgICBjYWxsYmFjazogKGJ1aWxkZXI6IFNsYXNoQ29tbWFuZEJvb2xlYW5PcHRpb24pID0+IFNsYXNoQ29tbWFuZEJvb2xlYW5PcHRpb25cclxuICApOiB0aGlzIHtcclxuICAgIHRoaXMuYWRkTmV3T3B0aW9uKGNhbGxiYWNrLCBTbGFzaENvbW1hbmRCb29sZWFuT3B0aW9uKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBhZGRDaGFubmVsT3B0aW9uKFxyXG4gICAgY2FsbGJhY2s6IChidWlsZGVyOiBTbGFzaENvbW1hbmRDaGFubmVsT3B0aW9uKSA9PiBTbGFzaENvbW1hbmRDaGFubmVsT3B0aW9uXHJcbiAgKTogdGhpcyB7XHJcbiAgICB0aGlzLmFkZE5ld09wdGlvbihjYWxsYmFjaywgU2xhc2hDb21tYW5kQ2hhbm5lbE9wdGlvbik7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkSW50ZWdlck9wdGlvbihcclxuICAgIGNhbGxiYWNrOiAoYnVpbGRlcjogU2xhc2hDb21tYW5kSW50ZWdlck9wdGlvbikgPT4gU2xhc2hDb21tYW5kSW50ZWdlck9wdGlvblxyXG4gICk6IHRoaXMge1xyXG4gICAgdGhpcy5hZGROZXdPcHRpb24oY2FsbGJhY2ssIFNsYXNoQ29tbWFuZEludGVnZXJPcHRpb24pO1xyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGFkZE1lbnRpb25hYmxlT3B0aW9uKFxyXG4gICAgY2FsbGJhY2s6IChidWlsZGVyOiBTbGFzaENvbW1hbmRNZW50aW9uYWJsZU9wdGlvbikgPT4gU2xhc2hDb21tYW5kTWVudGlvbmFibGVPcHRpb25cclxuICApOiB0aGlzIHtcclxuICAgIHRoaXMuYWRkTmV3T3B0aW9uKGNhbGxiYWNrLCBTbGFzaENvbW1hbmRNZW50aW9uYWJsZU9wdGlvbik7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkTnVtYmVyT3B0aW9uKFxyXG4gICAgY2FsbGJhY2s6IChidWlsZGVyOiBTbGFzaENvbW1hbmROdW1iZXJPcHRpb24pID0+IFNsYXNoQ29tbWFuZE51bWJlck9wdGlvblxyXG4gICk6IHRoaXMge1xyXG4gICAgdGhpcy5hZGROZXdPcHRpb24oY2FsbGJhY2ssIFNsYXNoQ29tbWFuZE51bWJlck9wdGlvbik7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkUm9sZU9wdGlvbihcclxuICAgIGNhbGxiYWNrOiAoYnVpbGRlcjogU2xhc2hDb21tYW5kUm9sZU9wdGlvbikgPT4gU2xhc2hDb21tYW5kUm9sZU9wdGlvblxyXG4gICk6IHRoaXMge1xyXG4gICAgdGhpcy5hZGROZXdPcHRpb24oY2FsbGJhY2ssIFNsYXNoQ29tbWFuZFJvbGVPcHRpb24pO1xyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGFkZFN0cmluZ09wdGlvbihcclxuICAgIGNhbGxiYWNrOiAoYnVpbGRlcjogU2xhc2hDb21tYW5kU3RyaW5nT3B0aW9uKSA9PiBTbGFzaENvbW1hbmRTdHJpbmdPcHRpb25cclxuICApOiB0aGlzIHtcclxuICAgIHRoaXMuYWRkTmV3T3B0aW9uKGNhbGxiYWNrLCBTbGFzaENvbW1hbmRTdHJpbmdPcHRpb24pO1xyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGFkZFVzZXJPcHRpb24oXHJcbiAgICBjYWxsYmFjazogKGJ1aWxkZXI6IFNsYXNoQ29tbWFuZFVzZXJPcHRpb24pID0+IFNsYXNoQ29tbWFuZFVzZXJPcHRpb25cclxuICApOiB0aGlzIHtcclxuICAgIHRoaXMuYWRkTmV3T3B0aW9uKGNhbGxiYWNrLCBTbGFzaENvbW1hbmRVc2VyT3B0aW9uKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIHByaXZhdGUgYWRkTmV3T3B0aW9uPEEgZXh0ZW5kcyBTbGFzaENvbW1hbmRPcHRpb24+KFxyXG4gICAgY2FsbGJhY2s6IChidWlsZGVyOiBBKSA9PiBBLFxyXG4gICAgSW5zdGFuY2U6IG5ldyAoKSA9PiBBLFxyXG4gICk6IHRoaXMge1xyXG4gICAgaWYgKCFpc0Z1bmN0aW9uKGNhbGxiYWNrKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBgY2FsbGJhY2tgIHBhcmFtZXRlciBpcyBub3QgYSBmdW5jdGlvbicpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMub3B0aW9ucy5wdXNoKGNhbGxiYWNrKG5ldyBJbnN0YW5jZSgpKS50b0pTT04oKSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG59XHJcbiJdfQ==