export declare type Snowflake = string;
export declare type ApplicationCommandJSON = Omit<ApplicationCommandStructure, 'id' | 'application_id' | 'version'>;
export declare enum ApplicationCommandOptionTypes {
    Subcommand = 1,
    SubcommandGroup = 2,
    String = 3,
    Integer = 4,
    Boolean = 5,
    User = 6,
    Channel = 7,
    Role = 8,
    Mentionable = 9,
    Number = 10
}
export declare enum ApplicationCommandTypes {
    ChatInput = 1,
    User = 2,
    Message = 3
}
export declare enum ChannelTypes {
    GUILD_TEXT = 0,
    DM = 1,
    GUILD_VOICE = 2,
    GROUP_DM = 3,
    GUILD_CATEGORY = 4,
    GUILD_NEWS = 5,
    GUILD_STORE = 6,
    GUILD_NEWS_THREAD = 10,
    GUILD_PUBLIC_THREAD = 11,
    GUILD_PRIVATE_THREAD = 12,
    GUILD_STAGE_VOICE = 13
}
export interface ApplicationCommandStructure {
    id: Snowflake;
    type?: ApplicationCommandTypes;
    application_id: Snowflake;
    guild_id?: Snowflake;
    name: string;
    description: string;
    options?: Array<ApplicationCommandOptionStructure>;
    default_permission?: boolean;
    version: Snowflake;
}
export interface ApplicationCommandOptionStructure {
    type: ApplicationCommandOptionTypes;
    name: string;
    description: string;
    required?: boolean;
    choices?: Array<ApplicationCommandOptionChoiceStructure>;
    options?: Array<ApplicationCommandOptionStructure>;
    channel_types?: Array<ChannelTypes>;
}
export interface ApplicationCommandOptionChoiceStructure {
    name: string;
    value: number | string;
}
export interface ApplicationCommandInteractionDataOptionStructure {
    name: string;
    type: number;
    value?: ApplicationCommandOptionTypes;
    options?: Array<ApplicationCommandInteractionDataOptionStructure>;
}
export interface CommonPropertiesAndMethods {
    type: ApplicationCommandOptionTypes | ApplicationCommandTypes;
    name: string;
    description: string;
    setName(value: string): this;
    setDescription(value: string): this;
    toJSON(): ApplicationCommandJSON | ApplicationCommandOptionStructure;
}
export interface Choices<A> {
    name: string;
    value: A;
}
//# sourceMappingURL=interfaces.d.ts.map