import { ApplicationCommandJSON, ApplicationCommandOptionStructure, ApplicationCommandOptionTypes, ApplicationCommandTypes, CommonPropertiesAndMethods } from './interfaces';
import SlashCommandMethods from './commons/SlashCommandMethods';
export declare class SlashCommandSubcommand extends SlashCommandMethods implements CommonPropertiesAndMethods {
    readonly type: ApplicationCommandOptionTypes;
    readonly name: string;
    readonly description: string;
    setName(value: string): this;
    setDescription(value: string): this;
    toJSON(): ApplicationCommandOptionStructure;
}
export declare class SlashCommandSubcommandGroup implements CommonPropertiesAndMethods {
    readonly type: ApplicationCommandOptionTypes;
    readonly name: string;
    readonly description: string;
    readonly options: Array<ApplicationCommandOptionStructure>;
    setName(value: string): this;
    setDescription(value: string): this;
    addSubcommand(callback: (builder: SlashCommandSubcommand) => SlashCommandSubcommand): this;
    toJSON(): ApplicationCommandOptionStructure;
}
export declare class SlashCommandBuilder extends SlashCommandMethods implements CommonPropertiesAndMethods {
    readonly type: ApplicationCommandTypes;
    readonly name: string;
    readonly description: string;
    readonly defaultPermission: boolean;
    setType(value: ApplicationCommandTypes): this;
    setName(value: string): this;
    setDescription(value: string): this;
    setDefaultPermission(value: boolean): this;
    addSubcommand(callback: (builder: SlashCommandSubcommand) => SlashCommandSubcommand): this;
    addSubcommandGroup(callback: (builder: SlashCommandSubcommandGroup) => SlashCommandSubcommandGroup): this;
    toJSON(): ApplicationCommandJSON;
}
//# sourceMappingURL=main.d.ts.map